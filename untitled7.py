# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZjQ3WCPsIJcafgLbAlxY8fbWGeSv3_-f
"""

from sklearn import datasets
digits = datasets.load_digits()

digits.data

digits.target_names

digits.target #the number corresponding to each digit image in dataset

digits.images[0:0]  #each original sample is an image of shape (8, 8)

digits.images[0] #data is always 2D array (n_samples,n_features)

from sklearn import svm #support-vector machines are supervised learning models with algorithms that analyze data used for classification and regression analysis
clf = svm.SVC(gamma=0.001, C=100.) #SVC to fit to the data you provide, returning a "best fit" hyperplane that divides, or categorizes, your data.
#gamma values can be calculated by grid search and cross validation.

clf.fit(digits.data[:-1], digits.target[:-1])
#The clf (for classifier) estimator instance is first fitted to the model; that is, it must learn from the model.[:-1] which produces a new array that contains all but the last item

clf.predict(digits.data[-1:]) #Determine the image from the training set that best matches the last image.

import matplotlib.pyplot as plt
plt.figure(1, figsize=(4, 4))
plt.imshow(digits.images[-1], cmap=plt.cm.gray_r, interpolation='nearest')
plt.show()

#Conclusion The digit is nearest resemblance to the digit 8